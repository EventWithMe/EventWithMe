plugins {
    id 'com.android.application'
}

Properties props = new Properties()
try {
    props.load(file('apikey.properties').newDataInputStream())
} catch (Exception ignored) {
    throw new GradleException("Missing apikey.properties file")
}

android {
    compileSdk 31
    testOptions {
        unitTests.includeAndroidResources = true
    }

    defaultConfig {
        applicationId "com.example.eventwithus"
        minSdk 23
        targetSdk 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "PARSE_APPLICATION_ID", "\"${props.getProperty("PARSE_APPLICATION_ID")}\""
            buildConfigField "String", "PARSE_CLIENT_KEY", "\"${props.getProperty("PARSE_CLIENT_KEY")}\""
            buildConfigField "String", "TICKETMASTER_KEY", "\"${props.getProperty("TICKETMASTER_KEY")}\""
            buildConfigField "String", "PIXABAY_KEY", "\"${props.getProperty("PIXABAY_KEY")}\""
        }
        release {
            buildConfigField "String", "PARSE_APPLICATION_ID", "\"${props.getProperty("PARSE_APPLICATION_ID")}\""
            buildConfigField "String", "PARSE_CLIENT_KEY", "\"${props.getProperty("PARSE_CLIENT_KEY")}\""
            buildConfigField "String", "TICKETMASTER_KEY", "\"${props.getProperty("TICKETMASTER_KEY")}\""
            buildConfigField "String", "PIXABAY_KEY", "\"${props.getProperty("PIXABAY_KEY")}\""
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {

    //noinspection GradleDependency
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.android.support:multidex:1.0.3'
    implementation "androidx.multidex:multidex:2.0.1"
    //noinspection GradleDependency
    implementation "com.github.parse-community.Parse-SDK-Android:parse:2.1.0"

    // For listening for updates of new chat messages
    implementation 'com.github.parse-community:ParseLiveQuery-Android:1.2.2'
    implementation 'com.parse.bolts:bolts-android:1.4.0'

    // Volley for request handling and picasso for image handling
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.squareup.picasso:picasso:2.5.2'

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    // Glide v4 uses this new annotation processor -- see https://bumptech.github.io/glide/doc/generatedapi.html
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    //for testing
    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.13.2'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.4.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:1.10.19'
    // Optional -- For logging API calls to LogCat
    implementation 'com.squareup.okhttp3:logging-interceptor:4.6.0'
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'

    //for geo location services
    implementation 'com.google.android.gms:play-services-location:18.0.0'



    //for geolocation
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.maps.android:maps-utils-ktx:3.3.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'

    //for DateTime formatting
    implementation 'com.jakewharton.threetenabp:threetenabp:1.3.1'
}